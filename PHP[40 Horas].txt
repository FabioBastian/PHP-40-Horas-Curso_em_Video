Aula 1 - historia
Criado em 1995, por Rasmus Lerdorf, Batizada de Personal Home Page
passou a se chamar PHP: Hypertext Preprocessor;
Zeev Suraski e Andi Gutmans - reescreveram o núcleo da ferramenta e a transformou em uma Linguagem de Scripts
O mascote é um elefante pq PHP parece um elefante


Aula 2
PHP roda do lado do servidor


Aula 3
127.0.0.1 ou localhost
documentação php - php.net


Aula 4 - variaveis com PHP
no final do comando sempre por o ;
variaves sempre declaradas com $
EX: 
$idade = 45;
$sal - 1825.54;
$nome = "leonardo";
$casado = false;

usa se o . para cocatenar os bgl na hora de imprimir
echo("$nome tem $n anos!"); - com aspas duplas funciona


Aula 5 - Operadores Aritmeticos
+ - adição 
- - subtração
* - multiplicação
/ - divisão
% - modulo, resto da divisão

ordem de precedencia
Primeiro () depois * / % depois + -

INCERÇÃO DE VALORES NO PHP

Direto na URL 
EX: ?a=3&b=4 - passamos os valores de a e b
http://127.0.0.1/PHP-40-Horas-Curso_em_Video/aulas_curso/aula05/ex002.php?a=3&b=4

pegando os valores no PHP
$n1 = $_GET["a"];
$n2 = $_GET["b"];


Funções aritmeticas

abs() - pega o valor absoluto
EX: 
$n1 = -3; - o valor é negativo
.abs($n1); - o seu absoluto é 3 positivo

pow() - elevado a algo
EX: $n1<sup>$n2</sup>
$n1 = 4;
$n2 = 3;
pow($n1, $n2) - 4 elevado na 3

sqrt() - raiz quadrada
EX: 
$n1 = 4;
sqrt($n1) - retorna 2 que é a raiz quadrada

round() - arredonda o valor (arredondamento foda ksksks) 
se for 4.5 fica 5, se for 4.4 fica 4.
ceil - arredonda para cima 
floor - arredonda para baixo
EX:
$n1 = 4.899;
round($n1) - retorna o valor 5 arredondamento de 4.899
floor($n1) - retorna o valor 4 arredondamento de 4.899
ceil($n1) - retorna o valor 5 arredondamento de 4.899

intval() - pega a parte inteira da variavel
EX:
$n1 = 4.899.
intval($n1) - retorna o valor 4 que é a parte inteira de 4.899

number_format() - formatação - talvez em valor monetario
EX:
$n1 = 4000.899
number_format($n2, 2, ",", ".")) - retorna o valor de 4.000,90


Aula 6 - Operadores de Atribuição

$a += $b; - adição
$a -= $b; - subtração
$a *= $b; - multiplicação
$a /= $b; - divisão
$a &= $b; - modulo
$a .= $b; - concatecação

Operadores de incremento
Pre-incremento =        ++$a
Pos-incremento =        $a++
pre-decremento =       --$a
pos-decremento =        $a--

Impressão na tela
$atual = 2022
echo("O ano anterior é ". --$atual) - vai diminuir na variavel e depois imprimir - imprime(2021)
echo("O ano anterior é ". $atual--) - vai dimprimir na tela e depois diminuir na variavel - imprime(2022)

COMENTARIOS NO CODIGO - so aparece no codigo fonte
// esta linha é um comentario
# esta tambem é um comentario de uma linha
/*
comentario multi linha
*/

variaveis referenciadas - &
$a = 3;
$b = &$a;
$b += 5;
echo($a); - vai imprimir 8
echo($b); - tambem vai impimir 8

Variaveis de Variaveis
$site = "cursoemvideo"
$$site = "cursoPHP"
echo($site); - imprime "cursoemvideo"
echo($cursoemvideo); - imprime "cursoPHP"


Aula 7 - Operadores relacionais

> - maior
< - menor
>= - maior ou igual
<= - menor igual
<> ou != - diferente
== - igual
=== - identico, conteudo igual e do mesmo tipo

Operador Unario
expressão ? verdadeiro : falso
EX: 
$maior = $a>$b ? $a : $b

* Logica
Se (A > B) então
	maior <- A
Senão
	maior <- B
FimSe

EX: 
$r = $a>$b ? $a+$b : $a-$b
EX: Se a media for menor que 7, a variavel pega o recuperação.
$sit = $m < 7 ? "recuperação" : "aprovado"

Operadores Logicos
and ou && - precisa ter duas premissas verdadeiras
V - V = V
V - F = F
F - V = F
F - F = F

or ou || - precisa ter alguma premissa verdadeira e retorna verdadeiro
V - V = V
V - F = V
F - V = V
F - F = F

xor - so da verdadeiro quando uma premissa for verdadeiro, não as duas 
V - V = F
V - F = V
F - V = V
F - F = F

! - não 
V se torna F
F se torna V


Aula 8 - formulario de usuario
EX: - HTML
<form method= "get OU post" action="dados.php">
	valor: <input type="text" name="v" />
	input type="submit" value="Calcular" />
</form>

EX: - PHP
<?php
$valor = $_GET["v"];
echo("Digitou $v");
?>

GET E POST

EX: - HTML
<form method="get"> - deve se utilizar get no script do PHP

<form method="post"> - deve se utilizar post no script do PHP

EX: - PHP
<?php
$v = $_GET["n"]; - se no form do html estiver "get"

$v = $_POST["n"]; - se no form do html estiver "post"
?>


Aula 8
date() - para pegar a data atual
date("Y") - para pegar o ano completo
EX: 
$txt = !empty($_GET["t"]) ? $_GET["t"] : "[Texto generico]";

EX: mudar as coisa no CSS
<style>
        span.texto {
            font-size: <?php echo $tam; ?>;
            color: <?php echo $cor ?>;
        }
    </style>
</head>
<?php
    echo("<span class='texto'>$txt</span><br>");
    ?>
    <a href="index.php">Voltar</a>
</body>


Aula 9 - condições em PHP

if (condição){
		
}else{

}

EX: 
$maior = $a>b ? $a : $b; - operador ternario

OU

if($a > $b) {
	$maior = $a;
}else {
	$maior = $b;	
}

EX: 
else if (condição){
        codigo
    }


Aula 10 - Estrutura Condicional - Switch
escolha (op) {
	Caso 1
		Escreva("A")
	Caso 2
		Escreva("B")
	OutroCaso
		Escreva("Erro")
	Fim escolha

EX: 
switch(#op){
	case 1:
		echo("A");
		break;
	case 2:
		echo("B");
		break;
	defeaut:
		echo("Erro");
}

Condiçoes de multiplos casos
Escolha (op) {
	caso 1, 2, 3:
		Escreva("Tipo 1")
	Caso 4, 5:
		Escreva("Tipo 2")
	OutroCaso:
		Escreva("Tipo 3")
	FimEscolha
}

EX: 
swith ($op) {
	case 1:
	case 2:
	case 3:
		echo("Tipo");
		break;
	case 4:
	case 5:
		echo("Tipo 2")
		break;
	default:
		echo("Tipo 3");
}



ex: ler duas notas, calcular
verificar e retornar a media n1 e n2 é igual a media
A situação do aluno: aprovado(+7), recuperação(-7 até 5) reprovado(-=5).


Aula 11 - repetições - while
c <- 1
Enquanro(c<=10) faça
	Escreva(c)
	c <- c + 1
FimEnquanto

EX:
$c = 1;
while ($c <= 10) {
	echo($c);
	$c++;
}

EX: - php detro do html (cuidar que o echo somente aceita aspas simples('), utilizar no html aspas simples.
<?php
$c = 1;
while ($c <= 5) {
        echo("<label for='valor1'>Valor 1: <input type='number' name='v1' id='valor1' min='0' max='100'></label><br>");
	$c ++;
}
?>

Modificando o Laço

EX: - Utilizando Break; ou continue;
$c = 1/
while ($c <= 1000) {
	echo("teste");
	if ($c == 45){
		break; - quando chegar nesse break para a execução
	}
	echo("teste");
	else if ($c = 500) {
		continue; - volta para o while e não executa o codigo a baixo
	}
	c++
}



criar um contador personalizavel
inicio: input number
final - input number
incremento - option 1 até 10

o preograma deve saber contar de tras para a frente tambem











